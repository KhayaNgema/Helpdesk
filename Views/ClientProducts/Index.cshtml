@model IEnumerable<Helpdesk.Models.ClientProduct>

@{
    ViewBag.Title = "Client Products Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Add any additional styles as needed */
    body, html {
        height: 100%;
        margin: 0;
        padding-top: 25px;
    }

    .fixed-height-container {
        height: 100%;
        overflow: hidden; /* Hide overflow to prevent page scrolling */
        display: flex;
        flex-direction: column;
    }

    .header-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

    #pageTitle {
        margin-right: 20px; /* Adjust the margin as needed */
    }

    .search-bar {
        margin-left: 20px; /* Adjust the margin as needed */
    }

    #clientSearchInput {
        width: 400px;
        border: 1px solid #808080;
        border-radius: 20px;
        padding: 8px;
    }

    .card-container {
        display: flex;
        flex-wrap: nowrap;
        overflow-x: auto;
        justify-content: flex-start;
        gap: 10px;
        padding-bottom: 10px;
    }

    .card {
        margin: 10px 0;
        width: 400px;
        max-height: 530px; /* Set the maximum height for the card */
        overflow-y: auto; /* Enable vertical scrolling for the card content */
        display: flex;
        flex-direction: column;
        width: 630px;
        padding: 10px;
        position: relative;
    }

    .card-header {
        background-color: #030319;
        color: white;
        text-align: center;
        margin-top: 0; /* Remove margin-top to eliminate the gap */
        padding: 15px 0 10px; /* Add padding to the top of the card title */
        position: sticky;
        top: 0;
        z-index: 1;
    }

    .product-list {
        list-style-type: none;
        padding: 0;
        margin: 0; /* Remove margin to eliminate the gap */
        margin-left: 20px;
    }

    .product-list-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 5px;
        padding: 8px;
        transition: background-color 0.3s;
        cursor: pointer;
    }

        .product-list-item:hover {
            background-color: #f0f0f0;
        }

    .action-column {
        display: flex;
        visibility: hidden;
    }

    .product-list-item:hover .action-column {
        visibility: visible;
    }

    .action-buttons a {
        text-decoration: none;
        color: #000;
        margin-left: 10px;
        padding-right: 10px;
    }

    .add-new-button {
        background-color: #030319;
        color: white;
        border: none;
        padding: 10px;
        border-radius: 5px;
        cursor: pointer;
        position: absolute;
        bottom: 20px;
        right: 30px;
        z-index: 2; /* Set a higher z-index to make sure it's above other elements */
        transition: background-color 0.3s; /* Add transition for smooth color change */
    }

        .add-new-button:hover {
            background-color: #4a5ee3;
        }

    /* Add a style to make the card content scrollable */
    .card-content {
        overflow-y: auto;
        flex: 1; /* Allow the content to take up remaining vertical space */
    }
</style>

<!-- Rest of the code remains unchanged -->
<!-- Rest of the code remains unchanged -->

<div class="fixed-height-container">
    <br />
    <div class="header-container">
        <h4 id="pageTitle">Client Products</h4>
        <div class="search-bar">
            <input type="text" id="clientSearchInput" class="search-input" placeholder="Search clients...">
        </div>
    </div>

    <div id="clientProductsContainer" class="card-container">
        @foreach (var group in Model.GroupBy(item => item.ApprovedRequest.ClientName))
        {
            <div class="card">
                <div class="card-header">
                    @group.Key
                </div>
                <div class="card-content">
                    <ul class="product-list">
                        @foreach (var item in group)
                        {
                            <li class="product-list-item" onclick="window.location.href='@Url.Action("Details", new { id = item.ClientProductId })'">
                                <span>@Html.DisplayFor(modelItem => item.Product.ProductName)</span>
                                <div class="action-column">
                                    <div class="action-buttons">
                                        <a href="@Url.Action("Edit", new { id = item.ClientProductId })"><i class="fas fa-edit"></i> Edit</a>
                                    </div>
                                    <div class="action-buttons">
                                        <a href="@Url.Action("Details", new { id = item.ClientProductId })"><i class="fas fa-eye"></i> View</a>
                                    </div>
                                    <div class="action-buttons">
                                        <a href="@Url.Action("Delete", new { id = item.ClientProductId })"><i class="fas fa-trash-alt"></i> Delete</a>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
                <button class="add-new-button" onclick="window.location.href='@Url.Action("Create", new { clientName = group.Key })'">
                    <i class="fas fa-plus"></i> New Product
                </button>
            </div>
        }
    </div>
    <div id="noResultsMessage" class="no-results-message" style="display:none;">Search results not found.</div>
</div>

<script>
    // Add JavaScript for dynamic client search
    document.getElementById("clientSearchInput").addEventListener("input", function () {
        var searchValue = this.value.toLowerCase();
        var cards = document.querySelectorAll("#clientProductsContainer .card");
        var noResultsMessage = document.getElementById("noResultsMessage");

        var foundResults = false;

        cards.forEach(function (card) {
            var shouldHide = true;
            var clientName = card.querySelector(".card-header").textContent.toLowerCase();

            if (clientName.indexOf(searchValue) > -1) {
                shouldHide = false;
                foundResults = true;
            }

            card.style.display = shouldHide ? "none" : "";
        });

        noResultsMessage.style.display = foundResults ? "none" : "block";
    });
</script>
